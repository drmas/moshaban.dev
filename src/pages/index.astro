---
import Layout from '../layouts/Layout.astro';

// Get all blog posts
const posts = await Astro.glob('./blog/*.md');
const sortedPosts = posts.sort((a, b) => 
  new Date(b.frontmatter.publishDate).getTime() - new Date(a.frontmatter.publishDate).getTime()
);

// Enhanced SEO data for homepage
const seoData = {
  title: "Mo Shaban - Tech Blog",
  description: "Tech Lead @ Cara.care and co-founder of WeekOne.io. I write about modern web development, React Native, TypeScript, and building elegant software solutions.",
  type: 'website' as const
};
---

<Layout {...seoData}>
  <div class="container">
    <!-- Hero Section -->
    <section class="hero" role="banner">
      <div class="hero-content">
        <div class="code-block">
          <div class="code-header">
            <span class="filename">developer.js</span>
            <div class="editor-controls">
              <span class="control-dot red" aria-hidden="true"></span>
              <span class="control-dot yellow" aria-hidden="true"></span>
              <span class="control-dot green" aria-hidden="true"></span>
            </div>
          </div>
          <div class="code-content">
            <pre class="code-lines" role="img" aria-label="Developer profile code"><code><span class="line-number">1</span><span class="syntax-keyword">const</span> <span class="syntax-variable">developer</span> <span class="syntax-operator">=</span> <span class="syntax-bracket">{</span>
<span class="line-number">2</span>  <span class="syntax-property">name</span><span class="syntax-operator">:</span> <span class="syntax-string">'Mo Shaban'</span><span class="syntax-punctuation">,</span>
<span class="line-number">3</span>  <span class="syntax-property">role</span><span class="syntax-operator">:</span> <span class="syntax-string">'Tech Lead @ Cara.care'</span><span class="syntax-punctuation">,</span>
<span class="line-number">4</span>  <span class="syntax-property">passion</span><span class="syntax-operator">:</span> <span class="syntax-string">'Building elegant solutions'</span><span class="syntax-punctuation">,</span>
<span class="line-number">5</span>  <span class="syntax-property">blog</span><span class="syntax-operator">:</span> <span class="syntax-function">() =></span> <span class="syntax-string">'Tech insights & tutorials'</span>
<span class="line-number">6</span><span class="syntax-bracket">};</span></code></pre>
          </div>
        </div>
        
        <div class="hero-text">
          <h1 class="hero-title">
            <span class="comment-prefix">// </span>Welcome to my digital workspace
          </h1>
          <p class="hero-description">
            I write about modern web development, share coding insights, and explore 
            the tools that make us better developers. Join me on this journey of 
            continuous learning.
          </p>
          
          <div class="hero-stats">
            <div class="stat-item">
              <span class="stat-number">{sortedPosts.length}</span>
              <span class="stat-label">articles</span>
            </div>
            <div class="stat-divider" aria-hidden="true">|</div>
            <div class="stat-item">
              <span class="stat-number">‚àû</span>
              <span class="stat-label">learning</span>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Blog Posts Section -->
    <section class="blog-section" aria-labelledby="blog-heading">
      <header class="section-header">
        <h2 id="blog-heading" class="section-title">
          <span class="syntax-comment">/* </span>
          Latest Articles
          <span class="syntax-comment"> */</span>
        </h2>
        <p class="section-subtitle">
          Thoughts on web development, programming patterns, and technology trends
        </p>
      </header>

      <div class="posts-container">
        {sortedPosts.map((post, index) => (
          <article class="post-item">
            <div class="post-header">
              <div class="file-info">
                <span class="file-icon" aria-hidden="true">
                  {post.frontmatter.tags?.includes('TypeScript') ? 'üî∑' :
                   post.frontmatter.tags?.includes('JavaScript') ? 'üü®' :
                   post.frontmatter.tags?.includes('React') ? '‚öõÔ∏è' :
                   post.frontmatter.tags?.includes('Astro') ? 'üöÄ' : 'üìÑ'}
                </span>
                <span class="file-name">
                  {post.url.split('/').pop()?.replace('.html', '.md')}
                </span>
              </div>
              <div class="post-meta">
                <span class="commit-id">#{String(index + 1).padStart(2, '0')}</span>
                <time class="post-date" datetime={post.frontmatter.publishDate}>
                  {new Date(post.frontmatter.publishDate).toLocaleDateString('en-US', {
                    month: 'short',
                    day: 'numeric',
                    year: 'numeric'
                  })}
                </time>
              </div>
            </div>
            
            <div class="post-content">
              <h3 class="post-title">
                <a href={post.url} class="post-link">
                  {post.frontmatter.title}
                </a>
              </h3>
              
              <p class="post-description">
                {post.frontmatter.description}
              </p>
              
              {post.frontmatter.tags && (
                <div class="post-tags" role="list" aria-label="Article tags">
                  {post.frontmatter.tags.map(tag => (
                    <a 
                      href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`} 
                      class="tag"
                      role="listitem"
                    >
                      <span class="tag-symbol" aria-hidden="true">#</span>{tag.toLowerCase().replace(/\s+/g, '-')}
                    </a>
                  ))}
                </div>
              )}
            </div>
          </article>
        ))}
      </div>
    </section>
  </div>
</Layout>

<style>
  /* ===== HERO SECTION ===== */
  .hero {
    margin-bottom: 4rem;
    padding: 2rem 0;
  }

  .hero-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 3rem;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
  }

  .code-block {
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .code-block:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  .code-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem 1rem;
    background: var(--bg-tertiary);
    border-bottom: 1px solid var(--border-primary);
  }

  .filename {
    font-family: var(--font-mono);
    font-size: 0.875rem;
    color: var(--text-secondary);
    font-weight: 500;
  }

  .editor-controls {
    display: flex;
    gap: 0.5rem;
  }

  .control-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    transition: transform 0.15s ease;
  }

  .control-dot:hover {
    transform: scale(1.1);
  }

  .control-dot.red { background: #ff5f56; }
  .control-dot.yellow { background: #ffbd2e; }
  .control-dot.green { background: #27ca3f; }

  .code-content {
    padding: 1.5rem;
    background: var(--bg-primary);
  }

  .code-lines {
    font-family: var(--font-mono);
    font-size: 0.875rem;
    line-height: 1.6;
    margin: 0;
    background: none;
    border: none;
    color: var(--text-primary);
    overflow-x: auto;
  }

  .line-number {
    display: inline-block;
    width: 1.5rem;
    color: var(--text-muted);
    user-select: none;
    margin-right: 1rem;
    text-align: right;
  }

  /* Syntax highlighting */
  .syntax-keyword { color: var(--syntax-keyword); font-weight: 600; }
  .syntax-variable { color: var(--syntax-variable); }
  .syntax-operator { color: var(--syntax-operator); }
  .syntax-bracket { color: var(--text-primary); font-weight: 600; }
  .syntax-property { color: var(--syntax-property); }
  .syntax-string { color: var(--syntax-string); }
  .syntax-function { color: var(--syntax-function); }
  .syntax-punctuation { color: var(--text-secondary); }

  .hero-text {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .hero-title {
    font-size: 2.25rem;
    font-weight: 700;
    line-height: 1.2;
    color: var(--text-bright);
    margin: 0;
  }

  .comment-prefix {
    color: var(--syntax-comment);
    font-family: var(--font-mono);
    font-weight: 400;
  }

  .hero-description {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--text-secondary);
    margin: 0;
    max-width: 90%;
  }

  .hero-stats {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    margin-top: 0.5rem;
  }

  .stat-item {
    display: flex;
    flex-direction: row;
    align-items: baseline;
    gap: 0.5rem;
  }

  .stat-number {
    font-family: var(--font-mono);
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--accent-primary);
  }

  .stat-label {
    font-family: var(--font-mono);
    font-size: 0.875rem;
    color: var(--text-muted);
    white-space: nowrap;
  }

  .stat-divider {
    color: var(--border-primary);
    font-weight: 300;
    font-size: 1.25rem;
  }

  /* ===== BLOG SECTION ===== */
  .blog-section {
    margin-top: 4rem;
  }

  .section-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .section-title {
    font-size: 2rem;
    font-weight: 600;
    color: var(--text-bright);
    margin: 0 0 1rem 0;
    font-family: var(--font-mono);
  }

  .syntax-comment {
    color: var(--syntax-comment);
  }

  .section-subtitle {
    font-size: 1rem;
    color: var(--text-secondary);
    margin: 0;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .posts-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    max-width: 800px;
    margin: 0 auto;
  }

  .post-item {
    background: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: 8px;
    padding: 1.5rem;
    transition: all 0.15s ease;
    position: relative;
  }

  .post-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
    border-radius: 8px 8px 0 0;
    opacity: 0;
    transition: opacity 0.15s ease;
  }

  .post-item:hover {
    transform: translateY(-1px);
    border-color: var(--border-accent);
  }

  .post-item:hover::before {
    opacity: 1;
  }

  .post-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    font-family: var(--font-mono);
    font-size: 0.875rem;
  }

  .file-info {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .file-icon {
    font-size: 1rem;
  }

  .file-name {
    color: var(--syntax-string);
    font-weight: 500;
  }

  .post-meta {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    color: var(--text-muted);
  }

  .commit-id {
    color: var(--accent-warning);
    font-weight: 600;
  }

  .post-date {
    font-size: 0.8125rem;
  }

  .post-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .post-title {
    margin: 0;
    font-size: 1.375rem;
    font-weight: 600;
    line-height: 1.3;
  }

  .post-link {
    color: var(--text-bright);
    text-decoration: none;
    transition: color 0.15s ease;
  }

  .post-link:hover {
    color: var(--accent-primary);
  }

  .post-link:focus {
    outline: 2px solid var(--accent-primary);
    outline-offset: 2px;
    border-radius: 4px;
  }

  .post-description {
    color: var(--text-secondary);
    line-height: 1.6;
    margin: 0;
    font-size: 1rem;
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 0.5rem;
  }

  .tag {
    display: inline-flex;
    align-items: center;
    background: var(--bg-tertiary);
    color: var(--accent-primary);
    font-family: var(--font-mono);
    font-size: 0.8125rem;
    font-weight: 500;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    border: 1px solid var(--border-primary);
    transition: all 0.15s ease;
    text-decoration: none;
  }

  .tag:hover {
    background: var(--accent-primary);
    color: var(--bg-primary);
    transform: translateY(-1px);
  }

  .tag-symbol {
    margin-right: 0.125rem;
    opacity: 0.7;
  }

  /* ===== RESPONSIVE DESIGN ===== */
  @media (max-width: 768px) {
    .hero-content {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .hero-title {
      font-size: 1.875rem;
    }

    .hero-description {
      max-width: 100%;
      font-size: 1rem;
    }

    .section-title {
      font-size: 1.5rem;
    }

    .post-item {
      padding: 1.25rem;
    }

    .post-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .post-title {
      font-size: 1.25rem;
    }

    .code-content {
      padding: 1rem;
    }

    .code-lines {
      font-size: 0.8125rem;
    }

    .line-number {
      width: 1.25rem;
      margin-right: 0.75rem;
    }
  }

  @media (max-width: 480px) {
    .container {
      padding: 0 1rem;
    }

    .hero {
      padding: 1rem 0;
      margin-bottom: 2rem;
    }

    .hero-title {
      font-size: 1.5rem;
    }

    .hero-stats {
      justify-content: flex-start;
      gap: 1rem;
    }

    .post-item {
      padding: 1rem;
    }

    .posts-container {
      gap: 1rem;
    }
  }

  /* ===== ACCESSIBILITY IMPROVEMENTS ===== */
  @media (prefers-reduced-motion: reduce) {
    .code-block,
    .post-item,
    .control-dot,
    .post-link,
    .tag {
      transition: none;
    }

    .code-block:hover,
    .post-item:hover {
      transform: none;
    }
  }

  @media (prefers-contrast: high) {
    .post-item {
      border-width: 2px;
    }
    
    .tag {
      border-width: 2px;
    }
  }

  /* Focus indicators for keyboard navigation */
  .control-dot:focus,
  .post-item:focus-within {
    outline: 2px solid var(--accent-primary);
    outline-offset: 2px;
  }
</style>